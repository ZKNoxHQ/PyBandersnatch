

# This file was *autogenerated* from the file field_test_vectors.sage
from sage.all_cmdline import *   # import sage library

_sage_const_52435875175126190479447740508185965837690552500527637822603658699938581184513 = Integer(52435875175126190479447740508185965837690552500527637822603658699938581184513); _sage_const_0x323f6ab2be9df186b32d48320a504c8841b51474108995013ca91c0b6dfaeb04 = Integer(0x323f6ab2be9df186b32d48320a504c8841b51474108995013ca91c0b6dfaeb04); _sage_const_0x49f3b288d4250a92c8a6483fc259aed1cfd09151814f598f415b3f41c93c2850 = Integer(0x49f3b288d4250a92c8a6483fc259aed1cfd09151814f598f415b3f41c93c2850); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)# Bandersnatch, Montgomery model
p = _sage_const_52435875175126190479447740508185965837690552500527637822603658699938581184513 
Fp = GF(p)
a = Fp(_sage_const_0x323f6ab2be9df186b32d48320a504c8841b51474108995013ca91c0b6dfaeb04 )
b = Fp(_sage_const_0x49f3b288d4250a92c8a6483fc259aed1cfd09151814f598f415b3f41c93c2850 )
a_plus_b = a+b
a_minus_b = a-b
a_mul_b = a*b
a_div_b = a/b
nsq = _sage_const_1 
while Fp(nsq).is_square():
    nsq = -nsq
    if nsq > _sage_const_0 :
        nsq += _sage_const_1 
sqrt_b = b.sqrt()


def test_vector_scalar(k, name):
    print("test_vectors['{}'] = F({})".format(name, hex(k)))


print("p = 0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001")
print("F = Field(p)")
print("test_vectors = {}")
test_vector_scalar(a, 'a')
test_vector_scalar(b, 'b')
test_vector_scalar(a+b, 'a_plus_b')
test_vector_scalar(a*b, 'a_mul_b')
test_vector_scalar(a/b, 'a_div_b')
test_vector_scalar(nsq, 'non_square')
test_vector_scalar(sqrt_b, 'sqrt_b')

